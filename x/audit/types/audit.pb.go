// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: virtengine/audit/v1beta1/audit.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_virtengine_virtengine_types "github.com/virtengine/virtengine/types"
	types "github.com/virtengine/virtengine/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Provider stores owner auditor and attributes details
type Provider struct {
	Owner      string                                            `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner" yaml:"owner"`
	Auditor    string                                            `protobuf:"bytes,2,opt,name=auditor,proto3" json:"auditor" yaml:"auditor"`
	Attributes github_com_virtengine_virtengine_types.Attributes `protobuf:"bytes,4,rep,name=attributes,proto3,castrepeated=github.com/virtengine/virtengine/types.Attributes" json:"attributes" yaml:"attributes"`
}

func (m *Provider) Reset()         { *m = Provider{} }
func (m *Provider) String() string { return proto.CompactTextString(m) }
func (*Provider) ProtoMessage()    {}
func (*Provider) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f4b73de22e26562, []int{0}
}
func (m *Provider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Provider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Provider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Provider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provider.Merge(m, src)
}
func (m *Provider) XXX_Size() int {
	return m.Size()
}
func (m *Provider) XXX_DiscardUnknown() {
	xxx_messageInfo_Provider.DiscardUnknown(m)
}

var xxx_messageInfo_Provider proto.InternalMessageInfo

func (m *Provider) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Provider) GetAuditor() string {
	if m != nil {
		return m.Auditor
	}
	return ""
}

func (m *Provider) GetAttributes() github_com_virtengine_virtengine_types.Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Attributes
type AuditedAttributes struct {
	Owner      string                                            `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner" yaml:"owner"`
	Auditor    string                                            `protobuf:"bytes,2,opt,name=auditor,proto3" json:"auditor" yaml:"auditor"`
	Attributes github_com_virtengine_virtengine_types.Attributes `protobuf:"bytes,3,rep,name=attributes,proto3,castrepeated=github.com/virtengine/virtengine/types.Attributes" json:"attributes" yaml:"attributes"`
}

func (m *AuditedAttributes) Reset()         { *m = AuditedAttributes{} }
func (m *AuditedAttributes) String() string { return proto.CompactTextString(m) }
func (*AuditedAttributes) ProtoMessage()    {}
func (*AuditedAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f4b73de22e26562, []int{1}
}
func (m *AuditedAttributes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuditedAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuditedAttributes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuditedAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditedAttributes.Merge(m, src)
}
func (m *AuditedAttributes) XXX_Size() int {
	return m.Size()
}
func (m *AuditedAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditedAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_AuditedAttributes proto.InternalMessageInfo

func (m *AuditedAttributes) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *AuditedAttributes) GetAuditor() string {
	if m != nil {
		return m.Auditor
	}
	return ""
}

func (m *AuditedAttributes) GetAttributes() github_com_virtengine_virtengine_types.Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// AttributesResponse represents details of deployment along with group details
type AttributesResponse struct {
	Attributes []AuditedAttributes `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes" yaml:"attributes"`
}

func (m *AttributesResponse) Reset()         { *m = AttributesResponse{} }
func (m *AttributesResponse) String() string { return proto.CompactTextString(m) }
func (*AttributesResponse) ProtoMessage()    {}
func (*AttributesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f4b73de22e26562, []int{2}
}
func (m *AttributesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AttributesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AttributesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AttributesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttributesResponse.Merge(m, src)
}
func (m *AttributesResponse) XXX_Size() int {
	return m.Size()
}
func (m *AttributesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttributesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttributesResponse proto.InternalMessageInfo

func (m *AttributesResponse) GetAttributes() []AuditedAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// AttributesFilters defines filters used to filter deployments
type AttributesFilters struct {
	Auditors []string `protobuf:"bytes,1,rep,name=auditors,proto3" json:"auditors" yaml:"auditors"`
	Owners   []string `protobuf:"bytes,2,rep,name=owners,proto3" json:"owners" yaml:"owners"`
}

func (m *AttributesFilters) Reset()         { *m = AttributesFilters{} }
func (m *AttributesFilters) String() string { return proto.CompactTextString(m) }
func (*AttributesFilters) ProtoMessage()    {}
func (*AttributesFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f4b73de22e26562, []int{3}
}
func (m *AttributesFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AttributesFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AttributesFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AttributesFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttributesFilters.Merge(m, src)
}
func (m *AttributesFilters) XXX_Size() int {
	return m.Size()
}
func (m *AttributesFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_AttributesFilters.DiscardUnknown(m)
}

var xxx_messageInfo_AttributesFilters proto.InternalMessageInfo

func (m *AttributesFilters) GetAuditors() []string {
	if m != nil {
		return m.Auditors
	}
	return nil
}

func (m *AttributesFilters) GetOwners() []string {
	if m != nil {
		return m.Owners
	}
	return nil
}

// MsgSignProviderAttributes defines an SDK message for signing a provider attributes
type MsgSignProviderAttributes struct {
	Owner      string                                            `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner" yaml:"owner"`
	Auditor    string                                            `protobuf:"bytes,2,opt,name=auditor,proto3" json:"auditor" yaml:"auditor"`
	Attributes github_com_virtengine_virtengine_types.Attributes `protobuf:"bytes,3,rep,name=attributes,proto3,castrepeated=github.com/virtengine/virtengine/types.Attributes" json:"attributes" yaml:"attributes"`
}

func (m *MsgSignProviderAttributes) Reset()         { *m = MsgSignProviderAttributes{} }
func (m *MsgSignProviderAttributes) String() string { return proto.CompactTextString(m) }
func (*MsgSignProviderAttributes) ProtoMessage()    {}
func (*MsgSignProviderAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f4b73de22e26562, []int{4}
}
func (m *MsgSignProviderAttributes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignProviderAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignProviderAttributes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignProviderAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignProviderAttributes.Merge(m, src)
}
func (m *MsgSignProviderAttributes) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignProviderAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignProviderAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignProviderAttributes proto.InternalMessageInfo

func (m *MsgSignProviderAttributes) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgSignProviderAttributes) GetAuditor() string {
	if m != nil {
		return m.Auditor
	}
	return ""
}

func (m *MsgSignProviderAttributes) GetAttributes() github_com_virtengine_virtengine_types.Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// MsgSignProviderAttributesResponse defines the Msg/CreateProvider response type.
type MsgSignProviderAttributesResponse struct {
}

func (m *MsgSignProviderAttributesResponse) Reset()         { *m = MsgSignProviderAttributesResponse{} }
func (m *MsgSignProviderAttributesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSignProviderAttributesResponse) ProtoMessage()    {}
func (*MsgSignProviderAttributesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f4b73de22e26562, []int{5}
}
func (m *MsgSignProviderAttributesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignProviderAttributesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignProviderAttributesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignProviderAttributesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignProviderAttributesResponse.Merge(m, src)
}
func (m *MsgSignProviderAttributesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignProviderAttributesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignProviderAttributesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignProviderAttributesResponse proto.InternalMessageInfo

// MsgDeleteProviderAttributes defined the Msg/DeleteProviderAttributes
type MsgDeleteProviderAttributes struct {
	Owner   string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner" yaml:"owner"`
	Auditor string   `protobuf:"bytes,2,opt,name=auditor,proto3" json:"auditor" yaml:"auditor"`
	Keys    []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys" yaml:"keys"`
}

func (m *MsgDeleteProviderAttributes) Reset()         { *m = MsgDeleteProviderAttributes{} }
func (m *MsgDeleteProviderAttributes) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProviderAttributes) ProtoMessage()    {}
func (*MsgDeleteProviderAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f4b73de22e26562, []int{6}
}
func (m *MsgDeleteProviderAttributes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProviderAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProviderAttributes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProviderAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProviderAttributes.Merge(m, src)
}
func (m *MsgDeleteProviderAttributes) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProviderAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProviderAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProviderAttributes proto.InternalMessageInfo

func (m *MsgDeleteProviderAttributes) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgDeleteProviderAttributes) GetAuditor() string {
	if m != nil {
		return m.Auditor
	}
	return ""
}

func (m *MsgDeleteProviderAttributes) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

// MsgDeleteProviderAttributesResponse defines the Msg/ProviderAttributes response type.
type MsgDeleteProviderAttributesResponse struct {
}

func (m *MsgDeleteProviderAttributesResponse) Reset()         { *m = MsgDeleteProviderAttributesResponse{} }
func (m *MsgDeleteProviderAttributesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProviderAttributesResponse) ProtoMessage()    {}
func (*MsgDeleteProviderAttributesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f4b73de22e26562, []int{7}
}
func (m *MsgDeleteProviderAttributesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProviderAttributesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProviderAttributesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProviderAttributesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProviderAttributesResponse.Merge(m, src)
}
func (m *MsgDeleteProviderAttributesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProviderAttributesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProviderAttributesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProviderAttributesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Provider)(nil), "virtengine.audit.v1beta1.Provider")
	proto.RegisterType((*AuditedAttributes)(nil), "virtengine.audit.v1beta1.AuditedAttributes")
	proto.RegisterType((*AttributesResponse)(nil), "virtengine.audit.v1beta1.AttributesResponse")
	proto.RegisterType((*AttributesFilters)(nil), "virtengine.audit.v1beta1.AttributesFilters")
	proto.RegisterType((*MsgSignProviderAttributes)(nil), "virtengine.audit.v1beta1.MsgSignProviderAttributes")
	proto.RegisterType((*MsgSignProviderAttributesResponse)(nil), "virtengine.audit.v1beta1.MsgSignProviderAttributesResponse")
	proto.RegisterType((*MsgDeleteProviderAttributes)(nil), "virtengine.audit.v1beta1.MsgDeleteProviderAttributes")
	proto.RegisterType((*MsgDeleteProviderAttributesResponse)(nil), "virtengine.audit.v1beta1.MsgDeleteProviderAttributesResponse")
}

func init() {
	proto.RegisterFile("virtengine/audit/v1beta1/audit.proto", fileDescriptor_6f4b73de22e26562)
}

var fileDescriptor_6f4b73de22e26562 = []byte{
	// 567 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x55, 0x3d, 0x6f, 0xd3, 0x40,
	0x18, 0xce, 0xb9, 0xa1, 0x24, 0x6f, 0xf9, 0x50, 0x2c, 0x04, 0x6e, 0x2a, 0x7c, 0xe5, 0x0a, 0x6a,
	0xa5, 0x4a, 0x8e, 0xd2, 0x08, 0x21, 0xb5, 0x62, 0xa8, 0x85, 0x10, 0x4b, 0x24, 0x64, 0x36, 0xc4,
	0x92, 0x90, 0x93, 0xb1, 0x48, 0xe3, 0xc8, 0x77, 0x09, 0xe4, 0x2f, 0xb0, 0xd0, 0x01, 0x09, 0xc6,
	0x2c, 0x2c, 0x0c, 0xfc, 0x00, 0x7e, 0x41, 0xc7, 0x8e, 0x4c, 0x07, 0x4a, 0x16, 0xe4, 0xd1, 0xbf,
	0x00, 0xe5, 0xce, 0x5f, 0x15, 0xb8, 0xa0, 0x2e, 0x65, 0x60, 0xf3, 0xfb, 0xdc, 0xfb, 0xbc, 0x7e,
	0xde, 0xc7, 0xcf, 0xc9, 0x70, 0x7b, 0xec, 0x05, 0x9c, 0x0e, 0x5c, 0x6f, 0x40, 0x1b, 0x9d, 0x51,
	0xcf, 0xe3, 0x8d, 0x71, 0xb3, 0x4b, 0x79, 0xa7, 0xa9, 0x2a, 0x6b, 0x18, 0xf8, 0xdc, 0xd7, 0x8d,
	0xac, 0xcb, 0x52, 0x78, 0xdc, 0x55, 0xbf, 0xe6, 0xfa, 0xae, 0x2f, 0x9b, 0x1a, 0x8b, 0x27, 0xd5,
	0x5f, 0xdf, 0xcc, 0x4d, 0xed, 0x76, 0x18, 0xcd, 0x86, 0x72, 0x1e, 0x78, 0xdd, 0x11, 0xa7, 0xaa,
	0x91, 0xbc, 0xd7, 0xa0, 0xf2, 0x38, 0xf0, 0xc7, 0x5e, 0x8f, 0x06, 0x7a, 0x03, 0x2e, 0xf8, 0xaf,
	0x06, 0x34, 0x30, 0xd0, 0x3a, 0xda, 0xaa, 0xda, 0xab, 0xa1, 0xc0, 0x0a, 0x88, 0x04, 0xbe, 0x34,
	0xe9, 0x1c, 0xf4, 0x77, 0x89, 0x2c, 0x89, 0xa3, 0x60, 0xfd, 0x1e, 0x5c, 0x94, 0x6a, 0xfc, 0xc0,
	0xd0, 0x24, 0xe5, 0x66, 0x28, 0x70, 0x02, 0x45, 0x02, 0x5f, 0x51, 0xa4, 0x18, 0x20, 0x4e, 0x72,
	0xa4, 0x4f, 0x11, 0x40, 0x2a, 0x85, 0x19, 0xe5, 0xf5, 0xa5, 0xad, 0x95, 0x1d, 0x62, 0xe5, 0xb6,
	0x5c, 0xa8, 0x4e, 0x96, 0xb4, 0xf6, 0x93, 0x56, 0xfb, 0xd9, 0x91, 0xc0, 0xa5, 0x50, 0xe0, 0x1c,
	0x3b, 0x12, 0xb8, 0x16, 0xbf, 0x27, 0xc5, 0xc8, 0xa7, 0x6f, 0xb8, 0xe9, 0x7a, 0xfc, 0xc5, 0xa8,
	0x6b, 0x3d, 0xf7, 0x0f, 0x1a, 0x39, 0x3b, 0x72, 0x8f, 0x7c, 0x32, 0xa4, 0x2c, 0x1b, 0xce, 0x1c,
	0xc8, 0x4f, 0xd0, 0xa0, 0xb6, 0xbf, 0x90, 0x4b, 0x7b, 0x59, 0xc7, 0xf9, 0x59, 0xb4, 0xf4, 0xef,
	0x59, 0xb4, 0x5b, 0xf9, 0x30, 0xc5, 0xe8, 0xc7, 0x14, 0x97, 0xc8, 0x3b, 0x04, 0x7a, 0xae, 0x89,
	0xb2, 0xa1, 0x3f, 0x60, 0x54, 0xe7, 0x27, 0x56, 0x40, 0x72, 0x85, 0x6d, 0xab, 0x28, 0xcb, 0xd6,
	0x2f, 0x76, 0xdb, 0x9b, 0x7f, 0xb9, 0x4b, 0x81, 0xac, 0xb7, 0x08, 0x6a, 0xd9, 0xb4, 0x87, 0x5e,
	0x9f, 0xd3, 0x80, 0xe9, 0x7b, 0x50, 0x89, 0x4d, 0x56, 0x9a, 0xaa, 0x36, 0x0e, 0x05, 0x4e, 0xb1,
	0x48, 0xe0, 0xab, 0x27, 0x3e, 0x0a, 0x23, 0x4e, 0x7a, 0xa8, 0xb7, 0x60, 0x59, 0x7e, 0x58, 0x66,
	0x68, 0x92, 0xba, 0x16, 0x0a, 0x1c, 0x23, 0x91, 0xc0, 0x97, 0x73, 0x11, 0x60, 0xc4, 0x89, 0x0f,
	0x72, 0x8a, 0x3e, 0x6b, 0xb0, 0xda, 0x66, 0xee, 0x13, 0xcf, 0x1d, 0x24, 0xd7, 0xee, 0x7f, 0xba,
	0x7e, 0x9f, 0xae, 0xb2, 0x34, 0x6c, 0x03, 0x6e, 0x15, 0xfa, 0x95, 0xe4, 0x8c, 0x7c, 0x41, 0xb0,
	0xd6, 0x66, 0xee, 0x03, 0xda, 0xa7, 0x9c, 0x9e, 0xab, 0xaf, 0xdb, 0x50, 0x7e, 0x49, 0x27, 0xca,
	0xd0, 0xaa, 0x7d, 0x23, 0x14, 0x58, 0xd6, 0x91, 0xc0, 0x2b, 0x8a, 0xb2, 0xa8, 0x88, 0x23, 0xc1,
	0x78, 0xc3, 0x3b, 0xb0, 0x71, 0x8a, 0xf6, 0x64, 0xc7, 0x9d, 0x8f, 0x1a, 0x2c, 0xb5, 0x99, 0xab,
	0xbf, 0x41, 0x70, 0xbd, 0x20, 0x3e, 0xad, 0xe2, 0xab, 0x55, 0xe8, 0x61, 0x7d, 0xef, 0x0c, 0xa4,
	0xf4, 0x82, 0x1f, 0x22, 0x30, 0x0a, 0x5d, 0xbf, 0x7b, 0xea, 0xe4, 0x22, 0x5a, 0xfd, 0xfe, 0x99,
	0x68, 0x89, 0x24, 0xfb, 0xd1, 0xd1, 0xcc, 0x44, 0xc7, 0x33, 0x13, 0x7d, 0x9f, 0x99, 0xe8, 0x70,
	0x6e, 0x96, 0x8e, 0xe7, 0x66, 0xe9, 0xeb, 0xdc, 0x2c, 0x3d, 0xb5, 0xfe, 0x98, 0xc7, 0xd7, 0xf1,
	0x2f, 0x58, 0xe6, 0xb2, 0xbb, 0x2c, 0x7f, 0x91, 0xad, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf5,
	0x58, 0xcf, 0x98, 0xa3, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// SignProviderAttributes defines a method that signs provider attributes
	SignProviderAttributes(ctx context.Context, in *MsgSignProviderAttributes, opts ...grpc.CallOption) (*MsgSignProviderAttributesResponse, error)
	// DeleteProviderAttributes defines a method that deletes provider attributes
	DeleteProviderAttributes(ctx context.Context, in *MsgDeleteProviderAttributes, opts ...grpc.CallOption) (*MsgDeleteProviderAttributesResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SignProviderAttributes(ctx context.Context, in *MsgSignProviderAttributes, opts ...grpc.CallOption) (*MsgSignProviderAttributesResponse, error) {
	out := new(MsgSignProviderAttributesResponse)
	err := c.cc.Invoke(ctx, "/virtengine.audit.v1beta1.Msg/SignProviderAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteProviderAttributes(ctx context.Context, in *MsgDeleteProviderAttributes, opts ...grpc.CallOption) (*MsgDeleteProviderAttributesResponse, error) {
	out := new(MsgDeleteProviderAttributesResponse)
	err := c.cc.Invoke(ctx, "/virtengine.audit.v1beta1.Msg/DeleteProviderAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// SignProviderAttributes defines a method that signs provider attributes
	SignProviderAttributes(context.Context, *MsgSignProviderAttributes) (*MsgSignProviderAttributesResponse, error)
	// DeleteProviderAttributes defines a method that deletes provider attributes
	DeleteProviderAttributes(context.Context, *MsgDeleteProviderAttributes) (*MsgDeleteProviderAttributesResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SignProviderAttributes(ctx context.Context, req *MsgSignProviderAttributes) (*MsgSignProviderAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignProviderAttributes not implemented")
}
func (*UnimplementedMsgServer) DeleteProviderAttributes(ctx context.Context, req *MsgDeleteProviderAttributes) (*MsgDeleteProviderAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProviderAttributes not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SignProviderAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSignProviderAttributes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SignProviderAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/virtengine.audit.v1beta1.Msg/SignProviderAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SignProviderAttributes(ctx, req.(*MsgSignProviderAttributes))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteProviderAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteProviderAttributes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteProviderAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/virtengine.audit.v1beta1.Msg/DeleteProviderAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteProviderAttributes(ctx, req.(*MsgDeleteProviderAttributes))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "virtengine.audit.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignProviderAttributes",
			Handler:    _Msg_SignProviderAttributes_Handler,
		},
		{
			MethodName: "DeleteProviderAttributes",
			Handler:    _Msg_DeleteProviderAttributes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "virtengine/audit/v1beta1/audit.proto",
}

func (m *Provider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Provider) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Provider) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Attributes) > 0 {
		for iNdEx := len(m.Attributes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attributes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAudit(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Auditor) > 0 {
		i -= len(m.Auditor)
		copy(dAtA[i:], m.Auditor)
		i = encodeVarintAudit(dAtA, i, uint64(len(m.Auditor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintAudit(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AuditedAttributes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuditedAttributes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuditedAttributes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Attributes) > 0 {
		for iNdEx := len(m.Attributes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attributes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAudit(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Auditor) > 0 {
		i -= len(m.Auditor)
		copy(dAtA[i:], m.Auditor)
		i = encodeVarintAudit(dAtA, i, uint64(len(m.Auditor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintAudit(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AttributesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AttributesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AttributesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Attributes) > 0 {
		for iNdEx := len(m.Attributes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attributes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAudit(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AttributesFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AttributesFilters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AttributesFilters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Owners) > 0 {
		for iNdEx := len(m.Owners) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Owners[iNdEx])
			copy(dAtA[i:], m.Owners[iNdEx])
			i = encodeVarintAudit(dAtA, i, uint64(len(m.Owners[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Auditors) > 0 {
		for iNdEx := len(m.Auditors) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Auditors[iNdEx])
			copy(dAtA[i:], m.Auditors[iNdEx])
			i = encodeVarintAudit(dAtA, i, uint64(len(m.Auditors[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgSignProviderAttributes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignProviderAttributes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignProviderAttributes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Attributes) > 0 {
		for iNdEx := len(m.Attributes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attributes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAudit(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Auditor) > 0 {
		i -= len(m.Auditor)
		copy(dAtA[i:], m.Auditor)
		i = encodeVarintAudit(dAtA, i, uint64(len(m.Auditor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintAudit(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSignProviderAttributesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignProviderAttributesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignProviderAttributesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProviderAttributes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProviderAttributes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProviderAttributes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Keys) > 0 {
		for iNdEx := len(m.Keys) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Keys[iNdEx])
			copy(dAtA[i:], m.Keys[iNdEx])
			i = encodeVarintAudit(dAtA, i, uint64(len(m.Keys[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Auditor) > 0 {
		i -= len(m.Auditor)
		copy(dAtA[i:], m.Auditor)
		i = encodeVarintAudit(dAtA, i, uint64(len(m.Auditor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintAudit(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProviderAttributesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProviderAttributesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProviderAttributesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintAudit(dAtA []byte, offset int, v uint64) int {
	offset -= sovAudit(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Provider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovAudit(uint64(l))
	}
	l = len(m.Auditor)
	if l > 0 {
		n += 1 + l + sovAudit(uint64(l))
	}
	if len(m.Attributes) > 0 {
		for _, e := range m.Attributes {
			l = e.Size()
			n += 1 + l + sovAudit(uint64(l))
		}
	}
	return n
}

func (m *AuditedAttributes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovAudit(uint64(l))
	}
	l = len(m.Auditor)
	if l > 0 {
		n += 1 + l + sovAudit(uint64(l))
	}
	if len(m.Attributes) > 0 {
		for _, e := range m.Attributes {
			l = e.Size()
			n += 1 + l + sovAudit(uint64(l))
		}
	}
	return n
}

func (m *AttributesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Attributes) > 0 {
		for _, e := range m.Attributes {
			l = e.Size()
			n += 1 + l + sovAudit(uint64(l))
		}
	}
	return n
}

func (m *AttributesFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Auditors) > 0 {
		for _, s := range m.Auditors {
			l = len(s)
			n += 1 + l + sovAudit(uint64(l))
		}
	}
	if len(m.Owners) > 0 {
		for _, s := range m.Owners {
			l = len(s)
			n += 1 + l + sovAudit(uint64(l))
		}
	}
	return n
}

func (m *MsgSignProviderAttributes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovAudit(uint64(l))
	}
	l = len(m.Auditor)
	if l > 0 {
		n += 1 + l + sovAudit(uint64(l))
	}
	if len(m.Attributes) > 0 {
		for _, e := range m.Attributes {
			l = e.Size()
			n += 1 + l + sovAudit(uint64(l))
		}
	}
	return n
}

func (m *MsgSignProviderAttributesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteProviderAttributes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovAudit(uint64(l))
	}
	l = len(m.Auditor)
	if l > 0 {
		n += 1 + l + sovAudit(uint64(l))
	}
	if len(m.Keys) > 0 {
		for _, s := range m.Keys {
			l = len(s)
			n += 1 + l + sovAudit(uint64(l))
		}
	}
	return n
}

func (m *MsgDeleteProviderAttributesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovAudit(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAudit(x uint64) (n int) {
	return sovAudit(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Provider) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAudit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Provider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Provider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auditor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Auditor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attributes = append(m.Attributes, types.Attribute{})
			if err := m.Attributes[len(m.Attributes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAudit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAudit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuditedAttributes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAudit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuditedAttributes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuditedAttributes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auditor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Auditor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attributes = append(m.Attributes, types.Attribute{})
			if err := m.Attributes[len(m.Attributes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAudit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAudit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AttributesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAudit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AttributesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AttributesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attributes = append(m.Attributes, AuditedAttributes{})
			if err := m.Attributes[len(m.Attributes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAudit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAudit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AttributesFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAudit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AttributesFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AttributesFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auditors", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Auditors = append(m.Auditors, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owners", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owners = append(m.Owners, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAudit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAudit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignProviderAttributes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAudit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignProviderAttributes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignProviderAttributes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auditor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Auditor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attributes = append(m.Attributes, types.Attribute{})
			if err := m.Attributes[len(m.Attributes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAudit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAudit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignProviderAttributesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAudit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignProviderAttributesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignProviderAttributesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipAudit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAudit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProviderAttributes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAudit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProviderAttributes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProviderAttributes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auditor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Auditor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keys", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keys = append(m.Keys, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAudit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAudit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProviderAttributesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAudit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProviderAttributesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProviderAttributesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipAudit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAudit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAudit(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAudit
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAudit
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAudit
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAudit
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAudit
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAudit        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAudit          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAudit = fmt.Errorf("proto: unexpected end of group")
)
